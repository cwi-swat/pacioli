log "defining units\n";
baseunit dollar "$";
baseunit euro "â‚¬";
baseunit bit "bit";
unit pound "lb" 0.45359237*kilo gram;
unit minute "min" 60*second;
unit hour "hr" 60*minute;
unit day "d" 24*hour;
unit litre "l" (deci metre)^3;
log "setting up entities\n";
entity Product "/home/paul/data/code/mvm/case1/product.txt";
index Product bom_unit "/home/paul/data/code/mvm/case1/product.bom_unit";
index Product trade_unit "/home/paul/data/code/mvm/case1/product.trade_unit";
log "starting computation\n";
load bom "/home/paul/data/code/mvm/case1/bom.csv" "1" "Product.bom_unit" "Product.bom_unit";
load output "/home/paul/data/code/mvm/case1/output.csv" "1" "Product.trade_unit" "empty";
load purchase_price "/home/paul/data/code/mvm/case1/purchase_price.csv" "euro" "empty" "Product.trade_unit";
load sales_price "/home/paul/data/code/mvm/case1/sales_price.csv" "euro" "empty" "Product.trade_unit";
conversion conv "Product" "bom_unit" "trade_unit";
log "bom=\n";
print bom;
transpose conv_trans conv;
reciprocal conv_dual conv_trans;
join tmp conv bom;
join bom2 tmp conv_dual;
closure ebom bom2;
join cost purchase_price ebom;
join input ebom output;
join totalA cost output;
join totalB purchase_price input;
transpose output_trans output;
multiply subA cost output_trans;
transpose input_trans input;
multiply subB purchase_price input_trans;
log "subA =\n";
print subA;
log "totalA =\n";
print totalA;
log "subB =\n";
print subB;
log "totalB =\n";
print totalB;
closure exploded_bom1 bom;
closure exploded_bom2 bom2;
log "exploded_bom1 =\n";
print exploded_bom1;
log "exploded_bom2 =\n";
print exploded_bom2;
conversion identity "Product" "bom_unit" "bom_unit";
sum yo1 exploded_bom2 bom2;
negative yo2 yo1;
log "computation ready\n\n"

