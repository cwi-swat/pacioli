import "pacioli/primitives.schema";

(* Base units are pre-defined *)
define v0 = gram;
define v1 = metre;

(* Units can always be multiplied *)
define v2 = gram*gram;
define v3 = gram*metre*second*ampere*kelvin*mole*candela;

(* Units can not always be summed. Value v5 gives an error. *)
define v4 = gram+gram;
define v5 = gram+metre;

(* The type is semantic, the order of multiplication is irrelevant *)
define v6 = gram*metre + gram*metre;
define v7 = gram*metre + metre*gram;

(*The type system does inference *)
define f0(x) = x*metre + gram*metre;

(* The type system derives a most general type *)
define f1(x,y) = x*y + gram*metre;
define f2(x) = f1(x,gram);
define v8 = f1(gram,metre);
define v9 = f1(metre,gram);

(* Multiplying left and right is not allowed. Value v10 gives an error. A multiplication and division cancel *)
define v10 = f1(metre*second,gram*second);
define v11 = f1(metre*second,gram/second)