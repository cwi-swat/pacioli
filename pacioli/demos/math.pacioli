import "pacioli/primitives.schema";

(* Vector Norm *)
define normSquared(x) = total(x*x);
define norm(x) = sqrt(total(x*x));
	
(* Lie algebras *)
define commutator(x,y) = x.y-y.x;
	
(* Some fun with lattices I *)
define a0 = [negative];
define a1 = [transpose];
define a2 = [reciprocal];
define a3 = [negative, transpose];
define a4 = [negative, reciprocal];
define a5 = [transpose, reciprocal];
define a6 = [negative, transpose, reciprocal];
	
(* Some fun with lattices II *)
define b0 = [identity, negative];
define b1 = [identity, transpose];
define b2 = [identity, reciprocal];
define b3 = [identity, negative, transpose];
define b4 = [identity, negative, reciprocal];
define b5 = [identity, transpose, reciprocal];
define b6 = [identity, negative, transpose, reciprocal];
	
(* Some fun with lattices of binary functions I *)
define c1 = [join];
define c2 = [sum];
define c3 = [multiply];
define c4 = [join, sum];
define c5 = [join, multiply];
define c6 = [sum, multiply];
define c7 = [join, sum, multiply];
	
(* Some fun with lattices of binary functions II *)
define identity2(x,y) = if (x=y) then x else y end;

define d0 = [identity2, join];
define d1 = [identity2, sum];
define d2 = [identity2, multiply];
define d3 = [identity2, join, sum];
define d4 = [identity2, join, multiply];
define d5 = [identity2, sum, multiply];
define d6 = [identity2, join, sum, multiply]