let
	logNot(x) = unitMatrix(x) - x,
  	flow = backward-forward,
	isReal = logNot(isJournal),
	isLiability = logNot(isAsset),
	isIllicit = logNot(isLegit),
	posValue = valuation*isAsset,
	negValue = valuation*isLiability
in
	let tuples = [tuple(conspiracy,
						posValue.licitProduction,
						negValue.licitProduction,
						posValue.illicitProduction,
						negValue.illicitProduction) |
					conspiracy in entity Conspiracy,
					semiflow := column(basis,conspiracy),
					illicitProduction := flow.(semiflow*isIllicit),
					licitProduction := flow.(semiflow*isLegit)]
	in
		[c | (c, licPos, licNeg, illPos, illNeg) in list tuples, 0 < illPos-illNeg]
	end
end