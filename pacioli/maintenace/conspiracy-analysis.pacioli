include "pacioli/standard.pacioli";
import "pacioli/maintenace/maintenance.schema";

define logNot(x) = unitMatrix(x) - x;

define flow = backward-forward;

define isReal = logNot(isJournal);
define isLiability = logNot(isAsset);
define isIllicit = logNot(isLicit);

define sign = isAsset - isLiability;

define pos(x) = positives(sign*x);
define neg(x) = negatives(sign*x);
	
define tuples =
  [tuple(conspiracy,
         valuation.pos(licitProduction),
         valuation.neg(licitProduction),
         valuation.pos(illicitProduction),
         valuation.neg(illicitProduction)) |
   conspiracy <- entity Conspiracy,
   semiflow := column(basis,conspiracy),
   illicitProduction := flow.(semiflow*isIllicit),
   licitProduction := flow.(semiflow*isLicit)];
					
[t | t <- list tuples, (c, licPos, licNeg, illPos, illNeg) := t, 0 < illPos]