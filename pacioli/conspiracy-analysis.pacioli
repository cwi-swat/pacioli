let 
    logNot(x) = unitMatrix(x) - x,
  	flow = backward-forward,
	isReal = logNot(isJournal),
	isLiability = logNot(isAsset),
	isIllicit = logNot(isLegit),
	value = valuation*(isAsset-isLiability),
	legitProduction(t) = flow.(t*isLegit),
	illicitProduction(t) = flow.(t*isIllicit)
in
	[tuple(conspiracy, illicitValue, legitValue) |
	          conspiracy in columnDomain(basis),
	          transition := column(basis,conspiracy),
	          illicitValue := value.illicitProduction(transition),
	          legitValue := value.legitProduction(transition), 
	          0 < illicitValue]
end